<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<document>
  <properties>
    <atom url="http://mail-archives.apache.org/mod_mbox/incubator-general/?format=atom">general@incubator.apache.org Archives</atom>
    <title>Apache Incubator: Releasing Eclipse Update Sites (DRAFT)</title>
  </properties>
  <body>
    <section id='intro'><title>A Guide To Releasing Eclipse Update Sites during Incubation (DRAFT)</title>
      <section id='TOC'><title>Contents</title><toc/></section>
      <section id="status">
        <title>Status - DRAFT</title>
        <p>
This document is under active <a href='#help-wanted'>development</a>. This is a first 
draft intended to allow public review. 
        </p>
      </section>
      <section id="abstract">
        <title>Abstract</title>
        <p> This document is descriptive, not normative. 
          It aims to guide podlings through the process of 
          releasing Eclipse update sites with proper mirroring.
        </p>
          
        <p>
          Podlings may distribute suitable artifacts through an 
          <a href='http://www.eclipse.org'>Eclipse</a> update site.
          All artifacts distributed through the update site must satisfy the standard
          <a href='#distribution-policy-overview'>policy</a>. This implies that:
          
          <ul>
            <li>The update site must be contained within the 
            <a href='#glossary-podling-dist'>podling distribution directory</a>.</li>
            <li>All artifacts must be 
            <a href='http://www.apache.org/dev/release-signing.html#keys-policy'>signed and summed</a>.</li>
            <li><a href='#distribution-mirroring'>Mirroring</a> must be used.</li>
          </ul>
         </p>
 
         <p>
          This guide describes a process for accomplishing this.
        </p>
      </section>
           
      <section id='setting-up-eclipse-mirroring'><title>Setting up Eclipse mirroring</title>
        <p>The Eclipse &lt;site> information will contain a URL that Eclipse uses to get the
        list of mirrors.  To set this up to use the automatic Apache mirroring system, 
        make a pair of files in project website space, e.g. in a directory your-project-name/docs/mirrors-support
          called something like: eclipse-update--xml.cgi and the same name
          with the type ".html".</p>
        <p>In the .cgi version, put the following:
<pre>#!/bin/sh
# Wrapper script around mirrors.cgi script
# (we must change to that directory in order for python to pick up the
#  python includes correctly)
cd /www/www.apache.org/dyn/mirrors
/www/www.apache.org/dyn/mirrors/mirrors.cgi $*</pre>
        </p>
        <p>In the .html version, put:
<pre>&lt;mirrors>
&lt;mirror url="[preferred]/incubator/your-project-name/eclipse-update-site/"
label="Recommended mirror: [preferred]"/>
[if-any http]
  [for http]
    &lt;mirror url="[http]/incubator/your-project-name/eclipse-update-site/"
      label="[http]"/>
  [end]
[end]
[if-any backup]
  [for backup]
    &lt;mirror url="[backup]/incubator/your-project-name/eclipse-update-site/"
      label="Backup mirror: [backup]"/>
  [end]
[end]
&lt;/mirrors></pre>
        </p>
        <p>Doing this will return the list of mirrors to Eclipse, as generated by
        the apache mirroring system</p>
      </section>
      <section id='update-site-project'>
        <title>Creating and maintaining an Eclipse update site project</title>
        <p>
          Your project will be making many releases.  Some subset (or perhaps all) of the
          releases will be available from the update site.  Overtime, the update site itself
          will be updated to reflect new versions being added.  Plan your release process to 
          allow for properly tagging the versions of the update site project that go with each
          release.
        </p>
        
        <p>
          Your project may have several components; these may be on different release cycles.
          A particular refresh of the update site might involve a subset of the components
          being managed by the update site.  
        </p>
        
        <p>
          For those components that are being released, new Jars will be generated, signed, and added
          to the update site.  In addition, you will be changing the site.xml file to reflect
          these newly released components.  The generation process for the update site will need to
          combine the newly release components, with the previously released things for previous
          levels.  If the previous components are small, you can keep these in SVN; if they are large,
          consider keeping them in www.apache.org/dist/incubator/your-project/eclipse-update-site
          since they're there already.
        </p>
        
        <p>The update site project is created with an Eclipse wizard.  You have to edit the
        site.xml file.  Here's some tips:
        <ul>
          <li>If you are creating an optimized update site (see following section) include 
            the pack200="true" attribute on the &lt;site> tag, and set the 
            digestURL attribute to refer to the directory containing the
            digest.zip file.  You can use a relative directory (relative to the 
            directory containing the site.xml file).  For example, if your
            digest.zip was in the same directory as the site.xml, use "/"; if it 
            was in a subdirectory of this called "digests", use "/digests".
            </li>
          <li><p>Set the <code>mirrorsURL</code> attribute to the location on your project's website where
          the mirroring support cgi script is.  For instance, it might be something like this:
          http://incubator.apache.org/your-project-name/mirrors-support/eclipse-update--xml.cgi</p>
            
            <p>This is the key to getting the mirroring to work with the Eclipse update process.</p>
          </li>
        </ul></p>        
      </section>
      <section id='optimized-sites'>
        <title>Optimized update sites</title>
        <p>Starting with Eclipse 3.3, an optimized form of update sites is possible, through two
        forms of optimization.  One is making use of the pack200 Jar optimizations, part of
        Java 5 and beyond, and the other is having a compact form of the update site information
        created and placed in a "digest.zip" file.  (Note: don't forget to have your signing 
        process sign this zip.) See the <a href='http://wiki.eclipse.org/Update_Site_Optimization'>
          Update Site Optimization</a> article for details on creating optimized update sites.
        </p>
      </section>
      <section id='sample-build-process'>
        <title>Sample build process</title>
        <p>A typical build script builds feature Jars from associated Eclipse feature projects,
        copies (perhaps from Maven repositories to insure getting a particular release level)
        jars for the plugins, runs the packer, and builds the digest.  Another script might
          do signing and signature verification of the jar and zip artifacts.  For a sample
          of scripts that do this, please refer to the SVN for 
          <a href='http://svn.apache.org/viewvc/uima/uimaj/trunk/uimaj-eclipse-update-site/'>
            the UIMA project's update site</a> - in particular the build.xml and the 
          signEclipseUpdateSite.sh script. 
        </p>
      </section> 
      
      <section id="help-wanted">
        <title>Help Wanted!</title>
        <p>Help to improve the system by posting a patch for this document to the
           <a href='https://issues.apache.org/jira/browse/INCUBATOR'>incubator section</a> 
           of JIRA or a comment to
           <a href='lists.html#general+at+incubator.apache.org'>general.AT.incubator.apache.org</a>.
          </p>
        </section>
     
    </section>
  </body>
</document>

